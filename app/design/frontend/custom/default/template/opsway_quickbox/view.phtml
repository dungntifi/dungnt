<?php
    $_helper = $this->helper('catalog/output');
    $_product = $this->getProduct();
?>
<script type="text/javascript">
	jQuery.noConflict();
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);

</script>
<div class="quick-view">

    <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
    <div class="info">
        <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="order-form" <?php if($_product->getOptions()): ?>enctype="multipart/form-data"<?php endif; ?>>
            <div class="name">
                <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
                <div class="sku"><?php echo $this->__('SKU') ?><?php echo $_helper->productAttribute($_product, $_product->getSku(), 'sku') ?></div>
                <?php echo $this->getChildHtml('product_price'); ?>
                <?php // echo $this->getPriceHtml($_product) ?>
            </div>
            <div class="product-type-data">
               	<?php echo $this->getChildHtml('product_type_data') ?>
           	</div>
               <?php echo $this->getTierPriceHtml() ?>
               <?php echo $this->getChildHtml('extrahint') ?>
            <?php echo $this->getChildHtml('other');?>

            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
             				<?php echo $this->getChildChildHtml('container1', '', true, true) ?>
             				<?php echo $this->getChildChildHtml('container2', '', true, true) ?>
            <?php endif;?>
            <?php if(!$_product->isSaleable()): ?>
           	    <div id="availability"><?php echo $this->__('Out Of Stock') ?></div>
           	<?php endif; ?>

            <div class="qty">
            <?php if(!$_product->isGrouped()): ?>
                <label for="qty"><?php echo $this->__('Quantity') ?></label>
                <div class="select-styled">
                    <select name="qty" id="qty" style="width:23px;">
                        <?php
                        $qtyStock = 5;// Mage::getModel('cataloginventory/stock_item')->loadByProduct($_product)->getQty(); Need getting qty for each simple
                        foreach (range(1, (($qtyStock > 5) ? 5 : $qtyStock)) as $qty): ?>
                        <option value="<?php echo $qty; ?>">
                            <?php echo $qty ?>
                        </option>
                        <?php endforeach; ?>
                    </select>
                </div>
            <?php endif; ?>
            </div>

            <div class="buttons">
                <?php echo $this->getChildHtml('addtocart') ?>
            </div>
        </form>
    </div>
    <div class="product-img-box">
        <?php echo $this->getChildHtml('media') ?>
    </div>
    <div class="clr"><!-- --></div>
    <?php echo $this->getChildHtml('product_additional_data'); ?>

</div>
<script type="text/javascript">



    var productAddToCartForm = new VarienForm('order-form');
productAddToCartForm.submit = function(button, url) {
    if (this.validator.validate()) {
        var form = this.form;
        var oldUrl = form.action;

        if (url) {
           form.action = url;
        }
        var e = null;
        try {
            this.form.submit();
        } catch (e) {
        }
        this.form.action = oldUrl;
        if (e) {
            throw e;
        }

        if (button && button != 'undefined') {
            button.disabled = true;
        }
    }
}.bind(productAddToCartForm);

productAddToCartForm.submitLight = function(button, url){
    if(this.validator) {
        var nv = Validation.methods;
        delete Validation.methods['required-entry'];
        delete Validation.methods['validate-one-required'];
        delete Validation.methods['validate-one-required-by-name'];
        // Remove custom datetime validators
        for (var methodName in Validation.methods) {
            if (methodName.match(/^validate-datetime-.*/i)) {
                delete Validation.methods[methodName];
            }
        }

        if (this.validator.validate()) {
            if (url) {
                this.form.action = url;
            }
            this.form.submit();
        }
        Object.extend(Validation.methods, nv);
    }
}.bind(productAddToCartForm);

</script>