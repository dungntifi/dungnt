<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php
$_product    = $this->getProduct();
$_attributes = Mage::helper('core')->decorateArray($this->getAllowAttributes());
$attributeSetName = Mage::getModel('eav/entity_attribute_set')->load($_product->getAttributeSetId())->getAttributeSetName();
?>
<?php if ($_product->isSaleable() && count($_attributes)):?>
    <span class="sale-info"><?php echo $this->htmlEscape($_product->getData('additionalinfo')); ?></span>
    <div class="product-details"><a href="">Jump in product details</a></div>
    <div class="block-select">
        <?php foreach($_attributes as $_attribute): ?>
            <div class="column">
                <?php $optionLabel = $_attribute->getLabel(); ?>
                <div class="label">
                    <?php if ($optionLabel == "Size" && $attributeSetName == "Dresses"){ ?><div class="sizechartlink"><a href="#" onclick='sizePopup()'>Size Chart</a></div><?php } ?>
                    <span>*</span>
                    <label><?php echo $_attribute->getLabel() ?></label>
                </div>
                <select name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId() ?>" class="required-entry super-attribute-select">
                    <option><?php echo $this->__('Choose an Option...') ?></option>
                </select>
            </div>
        <?php endforeach; ?>
    </div>
    <div class="block-color">
        <span class="required">*Required Fields</span>
        <b>Select color</b>
        <ul class="images-list">
            <li><a href="" class="active"><img src="images/img01.jpg" alt="" width="59" height="85"></a></li>
            <li><a href=""><img src="images/img02.jpg" alt="" width="59" height="85"></a></li>
        </ul>
    </div>
    <?php $_wishlistSubmitUrl = $this->helper('wishlist')->getAddUrl($_product); ?>
    <?php if ($this->helper('wishlist')->isAllow()) : ?>
        <button class="button btn-wishlist add-to-links" onclick="productAddToCartForm.submitLight(this, <?php echo $_wishlistSubmitUrl ?>); return false;"><?php echo $this->__('Add to Wishlist') ?></button>
    <?php endif; ?>
    <script type="text/javascript">
        var spConfig = new Product.Config(<?php echo $this->getJsonConfig() ?>);
        <?php
         $arr = array();
        foreach ($_product->getTypeInstance(true)->getUsedProducts ( null, $_product) as $simple) {
             $arr[$simple->getId()] = $simple->getData('additionalinfo');
        }
        ?>
        spConfig.simpleOptions = <?php echo Mage::helper('core')->jsonEncode($arr)?>;
        spConfig.getIdOfSelectedProduct = function () {
                var existingProducts = new Object();
                for (var i = this.settings.length - 1; i >= 0; i--) {
                    var selected = this.settings[i].options[this.settings[i].selectedIndex];
                    if (selected.config) {
                        for (var iproducts = 0; iproducts < selected.config.products.length; iproducts++) {
                            var usedAsKey = selected.config.products[iproducts] + "";
                            if (existingProducts[usedAsKey] == undefined) {
                                existingProducts[usedAsKey] = 1;
                            } else {
                                existingProducts[usedAsKey] = existingProducts[usedAsKey] + 1;
                            }
                        }
                    }
                }
                for (var keyValue in existingProducts) {
                    for (var keyValueInner in existingProducts) {
                        if (Number(existingProducts[keyValueInner]) < Number(existingProducts[keyValue])) {
                            delete existingProducts[keyValueInner];
                        }
                    }
                }
                var sizeOfExistingProducts = 0;
                var currentSimpleProductId = "";
                for (var keyValue in existingProducts) {
                    currentSimpleProductId = keyValue;
                    sizeOfExistingProducts = sizeOfExistingProducts + 1
                }
                if (sizeOfExistingProducts == 1) {
                  return this.simpleOptions[currentSimpleProductId];
                }
            return false;
            };
        spConfig.changeInfo = function(){
            var textSimple = this.getIdOfSelectedProduct();
            if (textSimple) {
                jQuery('p.additional_info_po').html(textSimple);
            }
        };
        spConfig.newEventBind = function(){
            this.settings.each(function(element){
                Event.observe(element, 'change', this.changeInfo.bind(this))
            }.bind(this));
        };
        spConfig.newEventBind();
    </script>
<?php endif;?>

<script>
    jQuery(document).ready(function() {
        if(window.location.href.match(/color=(\d+)/)) {
            var color = window.location.href.match(/color=(\d+)/);
            if(jQuery('#amconf-image-' + color[1]).length) {
                jQuery('#amconf-image-' + color[1]).trigger('click');
            }
        }
    });
</script>